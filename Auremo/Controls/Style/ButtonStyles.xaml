<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:w="clr-namespace:Auremo.Controls.CustomWidgets">
    <Style x:Key="NavigationButtonStyle" TargetType="{x:Type w:StatefulButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ClickMode" Value="Release"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush.Normal}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="TextBlock.FontSize" Value="14"/>
        <Setter Property="TextBlock.FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type w:StatefulButton}">
                    <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPushed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource TextBrush.Highlighted}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource TextBrush.Highlighted}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource TextBrush.Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalToggleButtonStyle" TargetType="{x:Type w:StatefulButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ClickMode" Value="Release"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush.Normal}"/>
        <Setter Property="Height" Value="80"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type w:StatefulButton}">
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="40"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,8"
                                   FontSize="11"  TextWrapping="Wrap" TextAlignment="Center"
                                   Text="{TemplateBinding Content}"/>
                        <Ellipse Grid.Row="1" x:Name="Indicator" Width="6" Height="6" Margin="0,2,0,2" HorizontalAlignment="Center" Fill="{StaticResource GlowBrush.Unlit}"/>
                        <Border Grid.Row="2" Width="24" Height="24" HorizontalAlignment="Center" BorderThickness="4"
                                BorderBrush="{StaticResource RoundGrooveBrush}" CornerRadius="25"
                                Background="{StaticResource RoundKnobBrush}">
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPushed" Value="True">
                            <Setter TargetName="Indicator" Property="Fill" Value="{StaticResource GlowBrush.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalToggleButtonStyle" TargetType="{x:Type w:StatefulButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ClickMode" Value="Release"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush.Normal}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type w:StatefulButton}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="4"
                                BorderBrush="{StaticResource RoundGrooveBrush}" CornerRadius="25"
                                Background="{StaticResource RoundKnobBrush}">
                        </Border>
                        <Ellipse Grid.Column="1" x:Name="Indicator" Width="6" Height="6" Margin="0,2,0,2" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlowBrush.Unlit}"/>
                        <TextBlock Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"
                                   FontSize="11"  TextWrapping="Wrap" TextAlignment="Center"
                                   Text="{TemplateBinding Content}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPushed" Value="True">
                            <Setter TargetName="Indicator" Property="Fill" Value="{StaticResource GlowBrush.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PlaybackButtonBaseStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Margin" Value="2,2"/>
        <Setter Property="ClickMode" Value="Release"/>
        <Setter Property="Foreground" Value="{StaticResource GlowBrush.Unlit}"/>
    </Style>
    <Style x:Key="PlaybackButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource PlaybackButtonBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="GlowBorder" BorderThickness="4" Background="{TemplateBinding Background}" BorderBrush="Transparent" CornerRadius="30">
                        <Border x:Name="BevelBorder" BorderThickness="2" BorderBrush="{StaticResource RoundBevelBrush}" Background="{StaticResource RoundFaceBrush}" CornerRadius="30">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="GlowBorder" Property="BorderBrush" Value="{StaticResource GlowBrush.Background}"/>
                            <Setter Property="Foreground" Value="{StaticResource GlowBrush.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StatefulPlaybackButtonStyle" TargetType="{x:Type w:StatefulButton}" BasedOn="{StaticResource PlaybackButtonBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type w:StatefulButton}">
                    <Border x:Name="GlowBorder" BorderThickness="6" Background="{TemplateBinding Background}" BorderBrush="Transparent" CornerRadius="30">
                        <Border x:Name="BevelBorder" BorderThickness="2" BorderBrush="{StaticResource RoundBevelBrush}" Background="{StaticResource RoundFaceBrush}" CornerRadius="30">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="GlowBorder" Property="BorderBrush" Value="{StaticResource GlowBrush.Background}"/>
                            <Setter Property="Foreground" Value="{StaticResource GlowBrush.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPushed" Value="True">
                            <Setter TargetName="GlowBorder" Property="BorderBrush" Value="{StaticResource GlowBrush.Background}"/>
                            <Setter Property="Foreground" Value="{StaticResource GlowBrush.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VolumeButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <ContentPresenter Content="{TemplateBinding Content}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CommandButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="140"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="ClickMode" Value="Release"/>
        <Setter Property="Foreground" Value="{StaticResource GlowBrush.Unlit}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="BevelBorder" BorderThickness="2" BorderBrush="{StaticResource RectangularBevelBrush}" Background="{StaticResource RectangularFaceBrush}">
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource GlowBrush.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
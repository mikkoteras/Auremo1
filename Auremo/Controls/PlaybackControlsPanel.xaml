<UserControl x:Class="Auremo.Controls.PlaybackControlsPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:c="clr-namespace:Auremo.Controls"
             xmlns:m="clr-namespace:Auremo.DataModel"
             xmlns:t="clr-namespace:Auremo.DataModel.Types"
             xmlns:u="clr-namespace:Auremo.Controls.Utility"
             xmlns:w="clr-namespace:Auremo.Controls.CustomWidgets"
             mc:Ignorable="d"
             Height="150" MinWidth="780"
             d:DesignWidth="780"
             d:DataContext="{d:DesignInstance m:DesignTimeWorld, IsDesignTimeCreatable=True}"
             IsEnabled="{Binding Path=ServerStatus.IsConnected}">
    <UserControl.Resources>
        <m:LanguageTranslationConverter x:Key="Translate"/>
        <u:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <u:EnumEqualsConverter x:Key="EqualsConverter"/>
        <u:TimecodeToStringConverter x:Key="TimecodeToStringConverter"/>
        <u:TimecodeToSliderMaxConverter x:Key="TimecodeToSliderMaxConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="120"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="0,10,0,0" HorizontalAlignment="Center">
            <!-- TODO it's OK to put the property into World. -->
            <TextBox Width="50" Height="20" Foreground="{StaticResource ReadoutBrush.Foreground.Normal}" Background="{StaticResource ReadoutBrush.Background.Normal}"
                     HorizontalContentAlignment="Center" VerticalAlignment="Center"
                     DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:PlaybackControlsPanel}}"
                     Text="{Binding Path=SeekBarTimeCode, Mode=OneWay, Converter={StaticResource TimecodeToStringConverter}}"/>
            <Slider Name="m_SeekBar" Style="{StaticResource SeekBarStyle}" Width="500" VerticalAlignment="Center" Margin="10,0"
                    Maximum="{Binding Path=ServerStatus.Duration, Mode=OneWay, Converter={StaticResource TimecodeToSliderMaxConverter}}"
                    IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=c:PlaybackControlsPanel}, Path=SeekBarTimeCodeIsValid}"
                    ValueChanged="OnSeekBarValueChanged"
                    GotMouseCapture="OnSeekBarGotMouseCapture"
                    LostMouseCapture="OnSeekBarLostMouseCapture"/>
            <TextBox Width="50" Height="20" Foreground="{StaticResource ReadoutBrush.Foreground.Normal}" Background="{StaticResource ReadoutBrush.Background.Normal}"
                     HorizontalContentAlignment="Center" VerticalAlignment="Center"
                     Text="{Binding Path=ServerStatus.Duration, Mode=OneWay, Converter={StaticResource TimecodeToStringConverter}}"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Height="80" VerticalAlignment="Top" HorizontalAlignment="Right">
            <w:StatefulButton Style="{StaticResource VerticalToggleButtonStyle}" IsPushed="{Binding Path=ServerStatus.Random}" Click="OnToggleRandomClick"
                              Content="{Binding Converter={StaticResource Translate}, ConverterParameter='playback-panel.random'}"/>
            <w:StatefulButton Style="{StaticResource VerticalToggleButtonStyle}" IsPushed="{Binding Path=ServerStatus.Repeat}" Click="OnToggleRepeatClick"
                              Content="{Binding Converter={StaticResource Translate}, ConverterParameter='playback-panel.repeat'}"/>
            <w:StatefulButton Style="{StaticResource VerticalToggleButtonStyle}" IsPushed="{Binding Path=ServerStatus.SingleMode, Converter={StaticResource EqualsConverter}, ConverterParameter={x:Static t:SingleMode.True}}" Click="OnToggleSingleClick"
                              Content="{Binding Converter={StaticResource Translate}, ConverterParameter='playback-panel.single'}"/>
            <w:StatefulButton Style="{StaticResource VerticalToggleButtonStyle}" IsPushed="{Binding Path=ServerStatus.SingleMode, Converter={StaticResource EqualsConverter}, ConverterParameter={x:Static t:SingleMode.Oneshot}}" Click="OnToggleOneshotClick"
                              Content="{Binding Converter={StaticResource Translate}, ConverterParameter='playback-panel.oneshot'}"/>
            <w:StatefulButton Style="{StaticResource VerticalToggleButtonStyle}" IsPushed="{Binding Path=ServerStatus.Consume}" Click="OnToggleConsumeClick"
                              Content="{Binding Converter={StaticResource Translate}, ConverterParameter='playback-panel.consume'}"/>
        </StackPanel>
        <c:VolumeWheel x:Name="m_VolumeWheel" Grid.Column="1" Grid.Row="1"
                       Visibility="{Binding Path=Configuration.ActiveOptions.VolumeControlTypeIsWheel, Converter={StaticResource BoolToVisibilityConverter}}"
                       ClientSideVolume="{Binding Path=ServerStatus.Volume.ClientSideValue, Mode=TwoWay}"
                       ServerSideVolume="{Binding Path=ServerStatus.Volume.ServerSideValue, Mode=OneWay}"
                       UserStartedEdit="OnVolumeEditStart"
                       UserFinishedEdit="OnVolumeEditFinish"/>
        <Grid Grid.Column="1" Grid.Row="1" Height="100" Width="50" HorizontalAlignment="Center" VerticalAlignment="Center"
              Visibility="{Binding Path=Configuration.ActiveOptions.VolumeControlTypeIsButtons, Converter={StaticResource BoolToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <RepeatButton Style="{StaticResource VolumeButtonStyle}"
                          Grid.Row="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Top"
                          Delay="300" Interval="20"
                          Click="OnVolumeUpButtonClicked"
                          GotMouseCapture="OnVolumeEditStart"
                          LostMouseCapture="OnVolumeEditFinish">
                <Polygon Fill="{StaticResource VolumeUpButtonBrush.Face}" StrokeThickness="2" Stroke="{StaticResource VolumeUpButtonBrush.Bevel}">
                    <Polygon.Points>
                        <Point X="25" Y="0"/>
                        <Point X="50" Y="34"/>
                        <Point X="0" Y="34"/>
                    </Polygon.Points>
                </Polygon>
            </RepeatButton>
            <Viewbox Grid.Row="2" Width="50" Height="10" Margin="0,2" Stretch="Fill">
                <Grid>
                    <Rectangle Width="101" Height="10" Fill="{StaticResource GlowBrush.Unlit}"/>
                    <Rectangle Height="10" Fill="{StaticResource GlowBrush.Foreground}" HorizontalAlignment="Left"
                               Width="{Binding Path=ServerStatus.Volume.ClientSideValue}"/>
                </Grid>
            </Viewbox>
            <RepeatButton Style="{StaticResource VolumeButtonStyle}"
                          Grid.Row="3" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom"
                          Delay="300" Interval="20"
                          Click="OnVolumeDownButtonClicked"
                          GotMouseCapture="OnVolumeEditStart"
                          LostMouseCapture="OnVolumeEditFinish">
                <Polygon Fill="{StaticResource VolumeDownButtonBrush.Face}" StrokeThickness="2" Stroke="{StaticResource VolumeDownButtonBrush.Bevel}">
                    <Polygon.Points>
                        <Point X="0" Y="0"/>
                        <Point X="50" Y="0"/>
                        <Point X="25" Y="34"/>
                    </Polygon.Points>
                </Polygon>
            </RepeatButton>
        </Grid>
        <Slider Style="{StaticResource VolumeSliderStyle}" Grid.Column="1" Grid.Row="1"
                Height="100" HorizontalAlignment="Center" VerticalAlignment="Center"
                Visibility="{Binding Path=Configuration.ActiveOptions.VolumeControlTypeIsSlider, Converter={StaticResource BoolToVisibilityConverter}}"
                Minimum="0" Maximum="100"
                Value="{Binding Path=ServerStatus.Volume.ClientSideValue}"
                GotMouseCapture="OnVolumeEditStart"
                LostMouseCapture="OnVolumeEditFinish"/>
        <StackPanel Height="120" Orientation="Horizontal" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Left" Margin="0,0,10,0">
            <Button Style="{StaticResource PlaybackButtonStyle}" Click="OnBackClick">
                <Viewbox Width="15" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Path Style="{StaticResource BackGlyph}"/>
                </Viewbox>
            </Button>
            <w:StatefulButton Style="{StaticResource StatefulPlaybackButtonStyle}" Click="OnStopClick"
                              IsPushed="{Binding Path=ServerStatus.PlayState, Converter={StaticResource EqualsConverter}, ConverterParameter={x:Static t:PlayState.Stopped}}">
                <Viewbox Width="11" Height="11" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Path Style="{StaticResource StopGlyph}"/>
                </Viewbox>
            </w:StatefulButton>
            <w:StatefulButton Style="{StaticResource StatefulPlaybackButtonStyle}" Click="OnPlayClick"
                              IsPushed="{Binding Path=ServerStatus.PlayState, Converter={StaticResource EqualsConverter}, ConverterParameter={x:Static t:PlayState.Playing}}">
                <Viewbox Width="15" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Path Style="{StaticResource PlayGlyph}"/>
                </Viewbox>
            </w:StatefulButton>
            <w:StatefulButton Style="{StaticResource StatefulPlaybackButtonStyle}" Click="OnPauseClick"
                              IsPushed="{Binding Path=ServerStatus.PlayState, Converter={StaticResource EqualsConverter}, ConverterParameter={x:Static t:PlayState.Paused}}">
                <Viewbox Width="11" Height="11" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Path Style="{StaticResource PauseGlyph}"/>
                </Viewbox>
            </w:StatefulButton>
            <Button Style="{StaticResource PlaybackButtonStyle}" Click="OnSkipClick">
                <Viewbox Width="15" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Path Style="{StaticResource SkipGlyph}"/>
                </Viewbox>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
